<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>CloneCommand -  Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
  </head>
  <body>
<div id="namespaces">
	<h2 class="fixed">Namespaces</h2>
	<div class="scroll">
		<ul><li>
          <a href="../GitSharp/index.html" class="current">GitSharp</a>
      </li><li>
          <a href="../GitSharp.Commands/index.html">GitSharp.Commands</a>
      </li>
		</ul>
	</div>
</div><div id="types">
  <h2 class="fixed">Types in GitSharp</h2>
	<div class="scroll">
		<ul><li>
            <a href="../GitSharp/AbstractObject.htm">AbstractObject</a>
        </li><li>
            <a href="../GitSharp/Author.htm">Author</a>
        </li><li>
            <a href="../GitSharp/Blob.htm">Blob</a>
        </li><li>
            <a href="../GitSharp/Branch.htm">Branch</a>
        </li><li>
            <a href="../GitSharp/Change.htm">Change</a>
        </li><li>
            <a href="../GitSharp/ChangeType.htm">ChangeType</a>
        </li><li>
            <a href="../GitSharp/CloneCommand.htm" class="current">CloneCommand</a>
        </li><li>
            <a href="../GitSharp/Commit.htm">Commit</a>
        </li><li>
            <a href="../GitSharp/Config.htm">Config</a>
        </li><li>
            <a href="../GitSharp/FetchCommand.htm">FetchCommand</a>
        </li><li>
            <a href="../GitSharp/Git.htm">Git</a>
        </li><li>
            <a href="../GitSharp/IGitCommand.htm">IGitCommand</a>
        </li><li>
            <a href="../GitSharp/IgnoreRules.htm">IgnoreRules</a>
        </li><li>
            <a href="../GitSharp/Index.htm">Index</a>
        </li><li>
            <a href="../GitSharp/IReferenceObject.htm">IReferenceObject</a>
        </li><li>
            <a href="../GitSharp/ITreeNode.htm">ITreeNode</a>
        </li><li>
            <a href="../GitSharp/Leaf.htm">Leaf</a>
        </li><li>
            <a href="../GitSharp/Ref.htm">Ref</a>
        </li><li>
            <a href="../GitSharp/Repository.htm">Repository</a>
        </li><li>
            <a href="../GitSharp/RepositoryStatus.htm">RepositoryStatus</a>
        </li><li>
            <a href="../GitSharp/ResetBehavior.htm">ResetBehavior</a>
        </li><li>
            <a href="../GitSharp/Tag.htm">Tag</a>
        </li><li>
            <a href="../GitSharp/Tree.htm">Tree</a>
        </li><li>
            <a href="../GitSharp/UserInfoProvider.htm">UserInfoProvider</a>
        </li>
		</ul>
	</div>
</div>
    <div class="header">
		<p class="class"><strong>Type</strong> CloneCommand</p>
		<p><strong>Namespace</strong> GitSharp</p><p><strong>Parent</strong> <a href="../GitSharp.Commands/AbstractFetchCommand.htm">AbstractFetchCommand</a></p>
	</div>
    <div class="sub-header">
			<div id="summary">Represents git's clone command line interface command.
			</div>



			<h3 class="section">Properties</h3>
			<ul><li><a href="../GitSharp/CloneCommand.htm#ActualDirectory">ActualDirectory</a></li><li><a href="../GitSharp/CloneCommand.htm#Bare">Bare</a></li><li><a href="../GitSharp/CloneCommand.htm#Depth">Depth</a></li><li><a href="../GitSharp/CloneCommand.htm#GitDirectory">GitDirectory</a></li><li><a href="../GitSharp/CloneCommand.htm#Local">Local</a></li><li><a href="../GitSharp/CloneCommand.htm#Mirror">Mirror</a></li><li><a href="../GitSharp/CloneCommand.htm#NoCheckout">NoCheckout</a></li><li><a href="../GitSharp/CloneCommand.htm#NoHardLinks">NoHardLinks</a></li><li><a href="../GitSharp/CloneCommand.htm#OriginName">OriginName</a></li><li><a href="../GitSharp/CloneCommand.htm#OutputStream">OutputStream</a></li><li><a href="../GitSharp/CloneCommand.htm#Quiet">Quiet</a></li><li><a href="../GitSharp/CloneCommand.htm#ReferenceRepository">ReferenceRepository</a></li><li><a href="../GitSharp/CloneCommand.htm#Repository">Repository</a></li><li><a href="../GitSharp/CloneCommand.htm#Shared">Shared</a></li><li><a href="../GitSharp/CloneCommand.htm#Source">Source</a></li><li><a href="../GitSharp/CloneCommand.htm#TemplateDirectory">TemplateDirectory</a></li><li><a href="../GitSharp/CloneCommand.htm#UploadPack">UploadPack</a></li><li><a href="../GitSharp/CloneCommand.htm#Verbose">Verbose</a></li>
			</ul>

	</div>




  <h3 class="section">Public properties</h3>
<div id="ActualDirectory" class="method">
    <h4><span title="System.string">string</span> <strong>ActualDirectory</strong> get; </h4>
    <div class="content">Get the directory where the Init command will initialize the repository. if GitDirectory is null ActualDirectory is used to initialize the repository.

    </div>
  </div><div id="Bare" class="method">
    <h4><span title="System.bool">bool</span> <strong>Bare</strong> get; set;</h4>
    <div class="content">Make a bare GIT repository. That is, instead of creating "directory" and placing the administrative files in "directory"/.git, make the "directory"  itself the $GIT_DIR.
This obviously implies the -n  because there is nowhere to check out the working tree. Also the branch heads at the remote are copied directly to corresponding local
branch heads, without mapping them to refs/remotes/origin/. When this option is used, neither remote-tracking branches nor the related configuration variables are created.

    </div>
  </div><div id="Depth" class="method">
    <h4><span title="System.int">int</span> <strong>Depth</strong> get; set;</h4>
    <div class="content">Not implemented.
Create a shallow clone with a history truncated to the specified number of revisions. A shallow repository has a number of limitations (you cannot clone or fetch from it,
nor push from nor into it), but is adequate if you are only interested in the recent history of a large project with a long history, and would want to send in fixes as patches.

    </div>
  </div><div id="GitDirectory" class="method">
    <h4><span title="System.string">string</span> <strong>GitDirectory</strong> get; set;</h4>
    <div class="content">

    </div>
  </div><div id="Local" class="method">
    <h4><span title="System.bool">bool</span> <strong>Local</strong> get; set;</h4>
    <div class="content">Not implemented
When the repository to clone from is on a local machine, this flag bypasses normal "git aware" transport mechanism and clones the repository
by making a copy of HEAD and everything under objects and refs directories. The files under .git/objects/ directory are hardlinked to save
space when possible. This is now the default when the source repository is specified with /path/to/repo  syntax, so it essentially is a no-op
option. To force copying instead of hardlinking (which may be desirable if you are trying to make a back-up of your repository), but still avoid
the usual "git aware" transport mechanism, --no-hardlinks can be used.

    </div>
  </div><div id="Mirror" class="method">
    <h4><span title="System.bool">bool</span> <strong>Mirror</strong> get; set;</h4>
    <div class="content">Set up a mirror of the remote repository. This implies --bare.

    </div>
  </div><div id="NoCheckout" class="method">
    <h4><span title="System.bool">bool</span> <strong>NoCheckout</strong> get; set;</h4>
    <div class="content">No checkout of HEAD is performed after the clone is complete.

    </div>
  </div><div id="NoHardLinks" class="method">
    <h4><span title="System.bool">bool</span> <strong>NoHardLinks</strong> get; set;</h4>
    <div class="content">Not implemented
Optimize the cloning process from a repository on a local filesystem by copying files under .git/objects  directory.

    </div>
  </div><div id="OriginName" class="method">
    <h4><span title="System.string">string</span> <strong>OriginName</strong> get; set;</h4>
    <div class="content">Instead of using the remote name origin to keep track of the upstream repository, use "name".

    </div>
  </div><div id="OutputStream" class="method">
    <h4><span title="System.IO.StreamWriter">StreamWriter</span> <strong>OutputStream</strong> get; set;</h4>
    <div class="content">

    </div>
  </div><div id="Quiet" class="method">
    <h4><span title="System.bool">bool</span> <strong>Quiet</strong> get; set;</h4>
    <div class="content">Operate quietly. This flag is also passed to the `rsync' command when given.

    </div>
  </div><div id="ReferenceRepository" class="method">
    <h4><span title="System.string">string</span> <strong>ReferenceRepository</strong> get; set;</h4>
    <div class="content">Not implemented
If the reference repository is on the local machine automatically setup .git/objects/info/alternates to obtain objects from the reference repository. Using
an already existing repository as an alternate will require fewer objects to be copied from the repository being cloned, reducing network and local storage costs.
NOTE: see NOTE to --shared option.

    </div>
  </div><div id="Repository" class="method">
    <h4><a href="../GitSharp/Repository.htm">Repository</a> <strong>Repository</strong> get; set;</h4>
    <div class="content">

    </div>
  </div><div id="Shared" class="method">
    <h4><span title="System.bool">bool</span> <strong>Shared</strong> get; set;</h4>
    <div class="content">Not implemented
When the repository to clone is on the local machine, instead of using hard links, automatically setup .git/objects/info/alternates to share the objects
with the source repository. The resulting repository starts out without any object of its own.
NOTE: this is a possibly dangerous operation; do not use it unless you understand what it does. If you clone your repository using this option and then
delete branches (or use any other git command that makes any existing commit unreferenced) in the source repository, some objects may become
unreferenced (or dangling). These objects may be removed by normal git operations (such as git-commit) which automatically call git gc --auto.
(See git-gc(1).) If these objects are removed and were referenced by the cloned repository, then the cloned repository will become corrupt.

    </div>
  </div><div id="Source" class="method">
    <h4><span title="System.string">string</span> <strong>Source</strong> get; set;</h4>
    <div class="content">The (possibly remote) repository to clone from.

    </div>
  </div><div id="TemplateDirectory" class="method">
    <h4><span title="System.string">string</span> <strong>TemplateDirectory</strong> get; set;</h4>
    <div class="content">Not implemented.
Specify the directory from which templates will be used; if unset the templates are taken from the installation defined default, typically /usr/share/git-core/templates.

    </div>
  </div><div id="UploadPack" class="method">
    <h4><span title="System.string">string</span> <strong>UploadPack</strong> get; set;</h4>
    <div class="content">Not implemented.
When given, and the repository to clone from is accessed via ssh, this specifies a non-default path for the command run on the other end.

    </div>
  </div><div id="Verbose" class="method">
    <h4><span title="System.bool">bool</span> <strong>Verbose</strong> get; set;</h4>
    <div class="content">Display the progressbar, even in case the standard output is not a terminal.

    </div>
  </div>
<div id="footer">
  <p><b><big>Learn more about <a href="http://www.eqqon.com/index.php/GitSharp"> GitSharp. </a></big></b></p>
  <p>Based on v0.0.0.0 of GitSharp</p>
  <p>Generated by <a href="http://docu.jagregory.com">docu</a></p>
</div>
  </body>
</html>