<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>FilterBranchCommand - GitSharp [local-build] Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
  </head>
  <body>
<div id="namespaces">
	<h2 class="fixed">Namespaces</h2>
	<div class="scroll">
		<ul><li>
          <a href="../GitSharp/index.html">GitSharp</a>
      </li><li>
          <a href="../GitSharp.Commands/index.html" class="current">GitSharp.Commands</a>
      </li>
		</ul>
	</div>
</div><div id="types">
  <h2 class="fixed">Types in GitSharp.Commands</h2>
	<div class="scroll">
		<ul><li>
            <a href="../GitSharp.Commands/AbstractCommand.htm">AbstractCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/AbstractFetchCommand.htm">AbstractFetchCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/AddCommand.htm">AddCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/AmCommand.htm">AmCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/AnnotateCommand.htm">AnnotateCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/ApplyCommand.htm">ApplyCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/ArchiveCommand.htm">ArchiveCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/BlameCommand.htm">BlameCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/BranchCommand.htm">BranchCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/CatFileCommand.htm">CatFileCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/CheckoutCommand.htm">CheckoutCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/CheckoutIndexCommand.htm">CheckoutIndexCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/CherryCommand.htm">CherryCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/CherryPickCommand.htm">CherryPickCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/CleanCommand.htm">CleanCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/CloneCommand.htm">CloneCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/CommitCommand.htm">CommitCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/CommitTreeCommand.htm">CommitTreeCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/ConfigCommand.htm">ConfigCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/CountObjectsCommand.htm">CountObjectsCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/DescribeCommand.htm">DescribeCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/DiffCommand.htm">DiffCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/DiffFilesCommand.htm">DiffFilesCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/DiffIndexCommand.htm">DiffIndexCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/DifftoolCommand.htm">DifftoolCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/DiffTreeCommand.htm">DiffTreeCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/FastExportCommand.htm">FastExportCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/FastimportCommand.htm">FastimportCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/FetchCommand.htm">FetchCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/FetchPackCommand.htm">FetchPackCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/FilterBranchCommand.htm" class="current">FilterBranchCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/FmtMergeMsgCommand.htm">FmtMergeMsgCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/ForEachRefCommand.htm">ForEachRefCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/FormatPatchCommand.htm">FormatPatchCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/FsckCommand.htm">FsckCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/GcCommand.htm">GcCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/GrepCommand.htm">GrepCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/HashObjectCommand.htm">HashObjectCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/IGitCommand.htm">IGitCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/IndexpackCommand.htm">IndexpackCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/InitCommand.htm">InitCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/LogCommand.htm">LogCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/LsFilesCommand.htm">LsFilesCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/LsRemoteCommand.htm">LsRemoteCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/LsTreeCommand.htm">LsTreeCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/MailinfoCommand.htm">MailinfoCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/MailsplitCommand.htm">MailsplitCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/MergeBaseCommand.htm">MergeBaseCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/MergeFileCommand.htm">MergeFileCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/MergeIndexCommand.htm">MergeIndexCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/MergetoolCommand.htm">MergetoolCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/MktreeCommand.htm">MktreeCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/MvCommand.htm">MvCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/NameRevCommand.htm">NameRevCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/NotesCommand.htm">NotesCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/PackObjectsCommand.htm">PackObjectsCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/PackRedundantCommand.htm">PackRedundantCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/PackRefsCommand.htm">PackRefsCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/PatchIdCommand.htm">PatchIdCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/PeekRemoteCommand.htm">PeekRemoteCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/PruneCommand.htm">PruneCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/PrunePackedCommand.htm">PrunePackedCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/PushCommand.htm">PushCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/QuiltimportCommand.htm">QuiltimportCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/ReadTreeCommand.htm">ReadTreeCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/RebaseCommand.htm">RebaseCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/ReceivePackCommand.htm">ReceivePackCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/ReflogCommand.htm">ReflogCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/RelinkCommand.htm">RelinkCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/RemoteCommand.htm">RemoteCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/RepackCommand.htm">RepackCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/ReplaceCommand.htm">ReplaceCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/RequestPullCommand.htm">RequestPullCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/ResetCommand.htm">ResetCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/RevertCommand.htm">RevertCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/RevParseCommand.htm">RevParseCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/RmCommand.htm">RmCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/SendPackCommand.htm">SendPackCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/ShortlogCommand.htm">ShortlogCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/ShowBranchCommand.htm">ShowBranchCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/ShowCommand.htm">ShowCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/ShowRefCommand.htm">ShowRefCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/StatusCommand.htm">StatusCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/StatusResults.htm">StatusResults</a>
        </li><li>
            <a href="../GitSharp.Commands/StatusState.htm">StatusState</a>
        </li><li>
            <a href="../GitSharp.Commands/StatusType.htm">StatusType</a>
        </li><li>
            <a href="../GitSharp.Commands/StripspaceCommand.htm">StripspaceCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/SubmoduleCommand.htm">SubmoduleCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/SvnCommand.htm">SvnCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/SymbolicRefCommand.htm">SymbolicRefCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/TagCommand.htm">TagCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/TarTreeCommand.htm">TarTreeCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/UnpackFileCommand.htm">UnpackFileCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/UnpackObjectsCommand.htm">UnpackObjectsCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/UpdateIndexCommand.htm">UpdateIndexCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/UpdateServerInfoCommand.htm">UpdateServerInfoCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/UploadArchiveCommand.htm">UploadArchiveCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/UploadPackCommand.htm">UploadPackCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/VarCommand.htm">VarCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/VerifyPackCommand.htm">VerifyPackCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/VerifyTagCommand.htm">VerifyTagCommand</a>
        </li><li>
            <a href="../GitSharp.Commands/WhatchangedCommand.htm">WhatchangedCommand</a>
        </li>
		</ul>
	</div>
</div>
    <div class="header">
		<p class="class"><strong>Type</strong> FilterBranchCommand</p>
		<p><strong>Namespace</strong> GitSharp.Commands</p><p><strong>Parent</strong> <a href="../GitSharp.Commands/AbstractCommand.htm">AbstractCommand</a></p>
	</div>
    <div class="sub-header">



			<h3 class="section">Properties</h3>
			<ul><li><a href="../GitSharp.Commands/FilterBranchCommand.htm#ActualDirectory">ActualDirectory</a></li><li><a href="../GitSharp.Commands/FilterBranchCommand.htm#Arguments">Arguments</a></li><li><a href="../GitSharp.Commands/FilterBranchCommand.htm#CommitFilter">CommitFilter</a></li><li><a href="../GitSharp.Commands/FilterBranchCommand.htm#D">D</a></li><li><a href="../GitSharp.Commands/FilterBranchCommand.htm#EnvFilter">EnvFilter</a></li><li><a href="../GitSharp.Commands/FilterBranchCommand.htm#Force">Force</a></li><li><a href="../GitSharp.Commands/FilterBranchCommand.htm#GitDirectory">GitDirectory</a></li><li><a href="../GitSharp.Commands/FilterBranchCommand.htm#IndexFilter">IndexFilter</a></li><li><a href="../GitSharp.Commands/FilterBranchCommand.htm#MsgFilter">MsgFilter</a></li><li><a href="../GitSharp.Commands/FilterBranchCommand.htm#Original">Original</a></li><li><a href="../GitSharp.Commands/FilterBranchCommand.htm#OutputStream">OutputStream</a></li><li><a href="../GitSharp.Commands/FilterBranchCommand.htm#ParentFilter">ParentFilter</a></li><li><a href="../GitSharp.Commands/FilterBranchCommand.htm#PruneEmpty">PruneEmpty</a></li><li><a href="../GitSharp.Commands/FilterBranchCommand.htm#RemapToAncestor">RemapToAncestor</a></li><li><a href="../GitSharp.Commands/FilterBranchCommand.htm#Repository">Repository</a></li><li><a href="../GitSharp.Commands/FilterBranchCommand.htm#SubdirectoryFilter">SubdirectoryFilter</a></li><li><a href="../GitSharp.Commands/FilterBranchCommand.htm#TagNameFilter">TagNameFilter</a></li><li><a href="../GitSharp.Commands/FilterBranchCommand.htm#TreeFilter">TreeFilter</a></li>
			</ul>

	</div>




  <h3 class="section">Public properties</h3>
<div id="ActualDirectory" class="method">
    <h4><span title="System.string">string</span> <strong>ActualDirectory</strong> get; </h4>
    <div class="content">

    </div>
  </div><div id="Arguments" class="method">
    <h4><span title="System.Collections.Generic.List<string>">List&lt;string&gt;</span> <strong>Arguments</strong> get; set;</h4>
    <div class="content">

    </div>
  </div><div id="CommitFilter" class="method">
    <h4><span title="System.string">string</span> <strong>CommitFilter</strong> get; set;</h4>
    <div class="content">Not implemented
This is the filter for performing the commit.
If this filter is specified, it will be called instead of the
'git-commit-tree' command, with arguments of the form
"<TREE_ID> [-p <PARENT_COMMIT_ID>]..." and the log message on
stdin.  The commit id is expected on stdout.
+
As a special extension, the commit filter may emit multiple
commit ids; in that case, the rewritten children of the original commit will
have all of them as parents.
+
You can use the 'map' convenience function in this filter, and other
convenience functions, too.  For example, calling 'skip_commit "$@"'
will leave out the current commit (but not its changes! If you want
that, use 'git-rebase' instead).
+
You can also use the 'git_commit_non_empty_tree "$@"' instead of
'git commit-tree "$@"' if you don't wish to keep commits with a single parent
and that makes no change to the tree.

    </div>
  </div><div id="D" class="method">
    <h4><span title="System.string">string</span> <strong>D</strong> get; set;</h4>
    <div class="content">Not implemented
Use this option to set the path to the temporary directory used for
rewriting.  When applying a tree filter, the command needs to
temporarily check out the tree to some directory, which may consume
considerable space in case of large projects.  By default it
does this in the '.git-rewrite/' directory but you can override
that choice by this parameter.

    </div>
  </div><div id="EnvFilter" class="method">
    <h4><span title="System.string">string</span> <strong>EnvFilter</strong> get; set;</h4>
    <div class="content">Not implemented
This filter may be used if you only need to modify the environment
in which the commit will be performed.  Specifically, you might
want to rewrite the author/committer name/email/time environment
variables (see linkgit:git-commit[1] for details).  Do not forget
to re-export the variables.

    </div>
  </div><div id="Force" class="method">
    <h4><span title="System.bool">bool</span> <strong>Force</strong> get; set;</h4>
    <div class="content">Not implemented
'git-filter-branch' refuses to start with an existing temporary
directory or when there are already refs starting with
'refs/original/', unless forced.

    </div>
  </div><div id="GitDirectory" class="method">
    <h4><span title="System.string">string</span> <strong>GitDirectory</strong> get; set;</h4>
    <div class="content">

    </div>
  </div><div id="IndexFilter" class="method">
    <h4><span title="System.string">string</span> <strong>IndexFilter</strong> get; set;</h4>
    <div class="content">Not implemented
This is the filter for rewriting the index.  It is similar to the
tree filter but does not check out the tree, which makes it much
faster.  Frequently used with `git rm \--cached
\--ignore-unmatch ...`, see EXAMPLES below.  For hairy
cases, see linkgit:git-update-index[1].

    </div>
  </div><div id="MsgFilter" class="method">
    <h4><span title="System.string">string</span> <strong>MsgFilter</strong> get; set;</h4>
    <div class="content">Not implemented
This is the filter for rewriting the commit messages.
The argument is evaluated in the shell with the original
commit message on standard input; its standard output is
used as the new commit message.

    </div>
  </div><div id="Original" class="method">
    <h4><span title="System.string">string</span> <strong>Original</strong> get; set;</h4>
    <div class="content">Not implemented
Use this option to set the namespace where the original commits
will be stored. The default value is 'refs/original'.

    </div>
  </div><div id="OutputStream" class="method">
    <h4><span title="System.IO.StreamWriter">StreamWriter</span> <strong>OutputStream</strong> get; set;</h4>
    <div class="content">

    </div>
  </div><div id="ParentFilter" class="method">
    <h4><span title="System.string">string</span> <strong>ParentFilter</strong> get; set;</h4>
    <div class="content">Not implemented
This is the filter for rewriting the commit's parent list.
It will receive the parent string on stdin and shall output
the new parent string on stdout.  The parent string is in
the format described in linkgit:git-commit-tree[1]: empty for
the initial commit, "-p parent" for a normal commit and
"-p parent1 -p parent2 -p parent3 ..." for a merge commit.

    </div>
  </div><div id="PruneEmpty" class="method">
    <h4><span title="System.bool">bool</span> <strong>PruneEmpty</strong> get; set;</h4>
    <div class="content">Not implemented
Some kind of filters will generate empty commits, that left the tree
untouched.  This switch allow git-filter-branch to ignore such
commits.  Though, this switch only applies for commits that have one
and only one parent, it will hence keep merges points. Also, this
option is not compatible with the use of '--commit-filter'. Though you
just need to use the function 'git_commit_non_empty_tree "$@"' instead
of the 'git commit-tree "$@"' idiom in your commit filter to make that
happen.

    </div>
  </div><div id="RemapToAncestor" class="method">
    <h4><span title="System.bool">bool</span> <strong>RemapToAncestor</strong> get; set;</h4>
    <div class="content">Not implemented
Rewrite refs to the nearest rewritten ancestor instead of
ignoring them.
+
Normally, positive refs on the command line are only changed if the
commit they point to was rewritten.  However, you can limit the extent
of this rewriting by using linkgit:rev-list[1] arguments, e.g., path
limiters.  Refs pointing to such excluded commits would then normally
be ignored.  With this option, they are instead rewritten to point at
the nearest ancestor that was not excluded.

    </div>
  </div><div id="Repository" class="method">
    <h4><a href="../GitSharp/Repository.htm">Repository</a> <strong>Repository</strong> get; set;</h4>
    <div class="content">

    </div>
  </div><div id="SubdirectoryFilter" class="method">
    <h4><span title="System.string">string</span> <strong>SubdirectoryFilter</strong> get; set;</h4>
    <div class="content">Not implemented
Only look at the history which touches the given subdirectory.
The result will contain that directory (and only that) as its
project root.  Implies --remap-to-ancestor.

    </div>
  </div><div id="TagNameFilter" class="method">
    <h4><span title="System.string">string</span> <strong>TagNameFilter</strong> get; set;</h4>
    <div class="content">Not implemented
This is the filter for rewriting tag names. When passed,
it will be called for every tag ref that points to a rewritten
object (or to a tag object which points to a rewritten object).
The original tag name is passed via standard input, and the new
tag name is expected on standard output.
+
The original tags are not deleted, but can be overwritten;
use "--tag-name-filter cat" to simply update the tags.  In this
case, be very careful and make sure you have the old tags
backed up in case the conversion has run afoul.
+
Nearly proper rewriting of tag objects is supported. If the tag has
a message attached, a new tag object will be created with the same message,
author, and timestamp. If the tag has a signature attached, the
signature will be stripped. It is by definition impossible to preserve
signatures. The reason this is "nearly" proper, is because ideally if
the tag did not change (points to the same object, has the same name, etc.)
it should retain any signature. That is not the case, signatures will always
be removed, buyer beware. There is also no support for changing the
author or timestamp (or the tag message for that matter). Tags which point
to other tags will be rewritten to point to the underlying commit.

    </div>
  </div><div id="TreeFilter" class="method">
    <h4><span title="System.string">string</span> <strong>TreeFilter</strong> get; set;</h4>
    <div class="content">Not implemented
This is the filter for rewriting the tree and its contents.
The argument is evaluated in shell with the working
directory set to the root of the checked out tree.  The new tree
is then used as-is (new files are auto-added, disappeared files
are auto-removed - neither .gitignore files nor any other ignore
rules *HAVE ANY EFFECT*!).

    </div>
  </div>
<div id="footer">
  <p><b><big>Learn more about <a href="http://www.eqqon.com/index.php/GitSharp"> GitSharp. </a></big></b></p>
  <p>Based on v0.2.0.0 of GitSharp (GitSharp [local-build])</p>
  <p>Generated by <a href="http://docu.jagregory.com">docu</a></p>
</div>
  </body>
</html>